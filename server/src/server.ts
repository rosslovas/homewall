import cors from 'cors';
import express from 'express';
import * as path from 'path';
import { createConnection } from 'typeorm';
import { Hold } from './entities/Hold';
import { Problem } from './entities/Problem';
import { Wall } from './entities/Wall';

(async () => {

	const connection = await createConnection({
		type: 'sqlite',
		database: './db.sqlite',
		entities: [
			__dirname + '/entities/*.js'
		],
		synchronize: true,
		logging: true
	});

	const holdData = [[{ "x": 156, "y": 149 }, { "x": 154, "y": 150 }, { "x": 152, "y": 151 }, { "x": 150, "y": 151 }, { "x": 148, "y": 153 }, { "x": 145, "y": 155 }, { "x": 141, "y": 158 }, { "x": 138, "y": 162 }, { "x": 136, "y": 168 }, { "x": 135, "y": 173 }, { "x": 135, "y": 179 }, { "x": 136, "y": 186 }, { "x": 137, "y": 190 }, { "x": 140, "y": 195 }, { "x": 144, "y": 199 }, { "x": 151, "y": 203 }, { "x": 159, "y": 206 }, { "x": 167, "y": 210 }, { "x": 175, "y": 212 }, { "x": 181, "y": 212 }, { "x": 187, "y": 212 }, { "x": 193, "y": 212 }, { "x": 200, "y": 211 }, { "x": 207, "y": 210 }, { "x": 213, "y": 209 }, { "x": 222, "y": 206 }, { "x": 230, "y": 203 }, { "x": 236, "y": 201 }, { "x": 239, "y": 198 }, { "x": 242, "y": 195 }, { "x": 244, "y": 191 }, { "x": 246, "y": 186 }, { "x": 246, "y": 179 }, { "x": 247, "y": 173 }, { "x": 247, "y": 166 }, { "x": 245, "y": 158 }, { "x": 244, "y": 153 }, { "x": 242, "y": 148 }, { "x": 239, "y": 145 }, { "x": 234, "y": 141 }, { "x": 230, "y": 139 }, { "x": 227, "y": 137 }, { "x": 225, "y": 136 }, { "x": 224, "y": 136 }, { "x": 223, "y": 135 }, { "x": 222, "y": 135 }, { "x": 220, "y": 134 }, { "x": 217, "y": 134 }, { "x": 215, "y": 134 }, { "x": 213, "y": 134 }, { "x": 212, "y": 134 }, { "x": 211, "y": 134 }], [{ "x": 300, "y": 309 }, { "x": 296, "y": 309 }, { "x": 292, "y": 310 }, { "x": 288, "y": 312 }, { "x": 282, "y": 315 }, { "x": 278, "y": 317 }, { "x": 273, "y": 323 }, { "x": 269, "y": 330 }, { "x": 266, "y": 341 }, { "x": 264, "y": 352 }, { "x": 264, "y": 362 }, { "x": 267, "y": 374 }, { "x": 279, "y": 390 }, { "x": 300, "y": 408 }, { "x": 325, "y": 423 }, { "x": 343, "y": 432 }, { "x": 362, "y": 441 }, { "x": 378, "y": 447 }, { "x": 397, "y": 452 }, { "x": 415, "y": 455 }, { "x": 432, "y": 459 }, { "x": 445, "y": 462 }, { "x": 453, "y": 462 }, { "x": 460, "y": 461 }, { "x": 468, "y": 458 }, { "x": 479, "y": 454 }, { "x": 491, "y": 448 }, { "x": 504, "y": 440 }, { "x": 514, "y": 430 }, { "x": 520, "y": 419 }, { "x": 526, "y": 404 }, { "x": 534, "y": 391 }, { "x": 543, "y": 382 }, { "x": 553, "y": 373 }, { "x": 563, "y": 365 }, { "x": 572, "y": 359 }, { "x": 580, "y": 355 }, { "x": 589, "y": 351 }, { "x": 599, "y": 348 }, { "x": 611, "y": 346 }, { "x": 625, "y": 345 }, { "x": 638, "y": 345 }, { "x": 651, "y": 346 }, { "x": 662, "y": 347 }, { "x": 670, "y": 349 }, { "x": 679, "y": 352 }, { "x": 689, "y": 357 }, { "x": 699, "y": 364 }, { "x": 708, "y": 371 }, { "x": 713, "y": 378 }, { "x": 718, "y": 386 }, { "x": 722, "y": 396 }, { "x": 728, "y": 409 }, { "x": 732, "y": 418 }, { "x": 735, "y": 430 }, { "x": 736, "y": 438 }, { "x": 736, "y": 445 }, { "x": 735, "y": 453 }, { "x": 734, "y": 461 }, { "x": 730, "y": 468 }, { "x": 725, "y": 473 }, { "x": 719, "y": 476 }, { "x": 710, "y": 478 }, { "x": 701, "y": 478 }, { "x": 693, "y": 478 }, { "x": 686, "y": 476 }, { "x": 679, "y": 474 }, { "x": 668, "y": 471 }, { "x": 657, "y": 468 }, { "x": 648, "y": 465 }, { "x": 644, "y": 464 }, { "x": 643, "y": 463 }, { "x": 641, "y": 462 }, { "x": 640, "y": 462 }], [{ "x": 1013, "y": 166 }, { "x": 1013, "y": 167 }, { "x": 1014, "y": 168 }, { "x": 1016, "y": 170 }, { "x": 1018, "y": 173 }, { "x": 1021, "y": 176 }, { "x": 1024, "y": 179 }, { "x": 1027, "y": 182 }, { "x": 1030, "y": 185 }, { "x": 1034, "y": 188 }, { "x": 1039, "y": 192 }, { "x": 1043, "y": 196 }, { "x": 1046, "y": 198 }, { "x": 1048, "y": 200 }, { "x": 1051, "y": 202 }, { "x": 1054, "y": 206 }, { "x": 1058, "y": 209 }, { "x": 1062, "y": 213 }, { "x": 1066, "y": 216 }, { "x": 1069, "y": 219 }, { "x": 1072, "y": 221 }, { "x": 1074, "y": 223 }, { "x": 1077, "y": 226 }, { "x": 1080, "y": 230 }, { "x": 1084, "y": 233 }, { "x": 1087, "y": 236 }, { "x": 1090, "y": 239 }, { "x": 1093, "y": 240 }, { "x": 1095, "y": 243 }, { "x": 1099, "y": 246 }, { "x": 1105, "y": 251 }, { "x": 1111, "y": 256 }, { "x": 1116, "y": 259 }, { "x": 1118, "y": 261 }, { "x": 1121, "y": 262 }, { "x": 1124, "y": 266 }, { "x": 1128, "y": 268 }, { "x": 1132, "y": 272 }, { "x": 1134, "y": 274 }, { "x": 1136, "y": 275 }, { "x": 1137, "y": 277 }, { "x": 1139, "y": 279 }, { "x": 1141, "y": 281 }, { "x": 1143, "y": 284 }, { "x": 1146, "y": 287 }, { "x": 1148, "y": 290 }, { "x": 1149, "y": 292 }, { "x": 1152, "y": 296 }, { "x": 1155, "y": 299 }, { "x": 1159, "y": 303 }, { "x": 1162, "y": 305 }, { "x": 1165, "y": 308 }, { "x": 1167, "y": 309 }, { "x": 1170, "y": 312 }, { "x": 1175, "y": 317 }, { "x": 1180, "y": 321 }, { "x": 1185, "y": 325 }, { "x": 1189, "y": 328 }, { "x": 1193, "y": 330 }, { "x": 1199, "y": 333 }, { "x": 1205, "y": 335 }, { "x": 1212, "y": 339 }, { "x": 1220, "y": 342 }, { "x": 1226, "y": 344 }, { "x": 1230, "y": 345 }, { "x": 1233, "y": 347 }, { "x": 1238, "y": 348 }, { "x": 1243, "y": 350 }, { "x": 1247, "y": 350 }, { "x": 1250, "y": 351 }, { "x": 1252, "y": 351 }, { "x": 1253, "y": 351 }, { "x": 1255, "y": 350 }, { "x": 1256, "y": 349 }, { "x": 1257, "y": 348 }, { "x": 1257, "y": 347 }, { "x": 1258, "y": 346 }, { "x": 1259, "y": 344 }, { "x": 1259, "y": 341 }, { "x": 1260, "y": 339 }, { "x": 1260, "y": 336 }, { "x": 1258, "y": 331 }, { "x": 1256, "y": 328 }, { "x": 1254, "y": 325 }, { "x": 1253, "y": 323 }, { "x": 1251, "y": 321 }, { "x": 1248, "y": 318 }, { "x": 1245, "y": 316 }, { "x": 1241, "y": 313 }, { "x": 1236, "y": 311 }, { "x": 1232, "y": 309 }, { "x": 1229, "y": 307 }, { "x": 1227, "y": 305 }, { "x": 1223, "y": 303 }, { "x": 1220, "y": 300 }, { "x": 1217, "y": 297 }, { "x": 1214, "y": 295 }, { "x": 1212, "y": 293 }, { "x": 1210, "y": 291 }, { "x": 1207, "y": 289 }, { "x": 1205, "y": 287 }, { "x": 1202, "y": 284 }, { "x": 1199, "y": 282 }, { "x": 1196, "y": 279 }, { "x": 1193, "y": 276 }, { "x": 1191, "y": 274 }, { "x": 1188, "y": 271 }, { "x": 1186, "y": 269 }, { "x": 1184, "y": 268 }, { "x": 1182, "y": 266 }, { "x": 1180, "y": 265 }, { "x": 1179, "y": 264 }, { "x": 1178, "y": 263 }, { "x": 1178, "y": 262 }, { "x": 1177, "y": 261 }, { "x": 1176, "y": 260 }, { "x": 1176, "y": 259 }, { "x": 1176, "y": 257 }, { "x": 1176, "y": 254 }, { "x": 1176, "y": 251 }, { "x": 1176, "y": 249 }, { "x": 1177, "y": 246 }, { "x": 1178, "y": 243 }, { "x": 1179, "y": 240 }, { "x": 1179, "y": 237 }, { "x": 1181, "y": 233 }, { "x": 1183, "y": 231 }, { "x": 1186, "y": 228 }, { "x": 1188, "y": 225 }, { "x": 1191, "y": 223 }, { "x": 1194, "y": 220 }, { "x": 1197, "y": 217 }, { "x": 1202, "y": 214 }, { "x": 1208, "y": 209 }, { "x": 1214, "y": 207 }, { "x": 1218, "y": 204 }, { "x": 1223, "y": 201 }, { "x": 1228, "y": 197 }, { "x": 1236, "y": 193 }, { "x": 1243, "y": 188 }, { "x": 1250, "y": 184 }, { "x": 1257, "y": 180 }, { "x": 1262, "y": 176 }, { "x": 1266, "y": 174 }, { "x": 1269, "y": 172 }, { "x": 1271, "y": 170 }, { "x": 1271, "y": 169 }, { "x": 1272, "y": 169 }, { "x": 1272, "y": 168 }, { "x": 1273, "y": 167 }, { "x": 1273, "y": 166 }, { "x": 1273, "y": 165 }, { "x": 1274, "y": 164 }, { "x": 1274, "y": 163 }, { "x": 1274, "y": 161 }, { "x": 1274, "y": 160 }, { "x": 1274, "y": 158 }, { "x": 1274, "y": 156 }, { "x": 1274, "y": 154 }, { "x": 1274, "y": 151 }, { "x": 1274, "y": 150 }, { "x": 1274, "y": 149 }, { "x": 1272, "y": 147 }, { "x": 1270, "y": 146 }, { "x": 1269, "y": 144 }, { "x": 1267, "y": 144 }, { "x": 1264, "y": 143 }, { "x": 1260, "y": 143 }, { "x": 1257, "y": 143 }, { "x": 1253, "y": 143 }, { "x": 1248, "y": 143 }, { "x": 1244, "y": 143 }, { "x": 1239, "y": 144 }, { "x": 1235, "y": 145 }, { "x": 1230, "y": 146 }, { "x": 1227, "y": 147 }, { "x": 1223, "y": 149 }, { "x": 1219, "y": 151 }, { "x": 1215, "y": 153 }, { "x": 1211, "y": 156 }, { "x": 1208, "y": 159 }, { "x": 1203, "y": 162 }, { "x": 1197, "y": 167 }, { "x": 1193, "y": 170 }, { "x": 1187, "y": 174 }, { "x": 1184, "y": 177 }, { "x": 1180, "y": 181 }, { "x": 1177, "y": 184 }, { "x": 1173, "y": 187 }, { "x": 1170, "y": 190 }, { "x": 1167, "y": 192 }, { "x": 1164, "y": 194 }, { "x": 1163, "y": 196 }, { "x": 1161, "y": 197 }, { "x": 1159, "y": 199 }, { "x": 1156, "y": 200 }, { "x": 1154, "y": 201 }, { "x": 1153, "y": 201 }, { "x": 1151, "y": 202 }, { "x": 1149, "y": 203 }, { "x": 1146, "y": 204 }, { "x": 1143, "y": 204 }, { "x": 1140, "y": 205 }, { "x": 1137, "y": 205 }, { "x": 1134, "y": 205 }, { "x": 1131, "y": 205 }, { "x": 1127, "y": 205 }, { "x": 1121, "y": 205 }, { "x": 1116, "y": 205 }, { "x": 1111, "y": 204 }, { "x": 1108, "y": 203 }, { "x": 1104, "y": 201 }, { "x": 1100, "y": 199 }, { "x": 1095, "y": 196 }, { "x": 1090, "y": 193 }, { "x": 1085, "y": 190 }, { "x": 1081, "y": 187 }, { "x": 1078, "y": 185 }, { "x": 1075, "y": 183 }, { "x": 1072, "y": 180 }, { "x": 1068, "y": 177 }, { "x": 1065, "y": 175 }, { "x": 1063, "y": 171 }, { "x": 1061, "y": 169 }, { "x": 1059, "y": 167 }, { "x": 1058, "y": 166 }, { "x": 1056, "y": 164 }, { "x": 1053, "y": 162 }, { "x": 1051, "y": 160 }, { "x": 1050, "y": 159 }, { "x": 1048, "y": 158 }, { "x": 1047, "y": 157 }, { "x": 1045, "y": 156 }, { "x": 1044, "y": 155 }, { "x": 1042, "y": 154 }, { "x": 1041, "y": 154 }, { "x": 1040, "y": 153 }, { "x": 1038, "y": 153 }, { "x": 1038, "y": 152 }, { "x": 1036, "y": 151 }, { "x": 1035, "y": 151 }, { "x": 1034, "y": 150 }, { "x": 1033, "y": 150 }, { "x": 1032, "y": 150 }, { "x": 1031, "y": 150 }, { "x": 1031, "y": 149 }, { "x": 1030, "y": 149 }, { "x": 1029, "y": 149 }, { "x": 1029, "y": 148 }, { "x": 1028, "y": 148 }, { "x": 1027, "y": 148 }, { "x": 1026, "y": 148 }, { "x": 1025, "y": 148 }, { "x": 1024, "y": 148 }, { "x": 1024, "y": 147 }, { "x": 1022, "y": 147 }, { "x": 1020, "y": 146 }, { "x": 1019, "y": 146 }, { "x": 1018, "y": 146 }, { "x": 1017, "y": 146 }, { "x": 1017, "y": 145 }, { "x": 1015, "y": 145 }, { "x": 1014, "y": 145 }, { "x": 1013, "y": 144 }, { "x": 1012, "y": 144 }, { "x": 1011, "y": 144 }, { "x": 1010, "y": 144 }, { "x": 1007, "y": 143 }, { "x": 1005, "y": 143 }, { "x": 1002, "y": 142 }, { "x": 999, "y": 142 }, { "x": 996, "y": 142 }, { "x": 993, "y": 142 }, { "x": 988, "y": 142 }, { "x": 983, "y": 142 }, { "x": 978, "y": 142 }, { "x": 973, "y": 143 }, { "x": 968, "y": 143 }, { "x": 963, "y": 144 }, { "x": 960, "y": 145 }, { "x": 956, "y": 146 }, { "x": 954, "y": 148 }, { "x": 950, "y": 150 }, { "x": 947, "y": 152 }, { "x": 944, "y": 155 }, { "x": 941, "y": 159 }, { "x": 938, "y": 163 }, { "x": 936, "y": 167 }, { "x": 934, "y": 171 }, { "x": 932, "y": 176 }, { "x": 931, "y": 179 }, { "x": 931, "y": 182 }, { "x": 931, "y": 185 }, { "x": 931, "y": 189 }, { "x": 931, "y": 193 }, { "x": 932, "y": 199 }, { "x": 934, "y": 206 }, { "x": 936, "y": 212 }, { "x": 939, "y": 218 }, { "x": 942, "y": 224 }, { "x": 945, "y": 228 }, { "x": 949, "y": 233 }, { "x": 954, "y": 238 }, { "x": 960, "y": 244 }, { "x": 966, "y": 249 }, { "x": 969, "y": 253 }, { "x": 972, "y": 256 }, { "x": 976, "y": 260 }, { "x": 981, "y": 263 }, { "x": 987, "y": 267 }, { "x": 991, "y": 271 }, { "x": 995, "y": 274 }, { "x": 997, "y": 276 }, { "x": 1000, "y": 279 }, { "x": 1004, "y": 282 }, { "x": 1009, "y": 287 }, { "x": 1013, "y": 291 }, { "x": 1016, "y": 294 }, { "x": 1018, "y": 295 }, { "x": 1019, "y": 296 }, { "x": 1022, "y": 298 }, { "x": 1026, "y": 301 }, { "x": 1030, "y": 304 }, { "x": 1033, "y": 305 }, { "x": 1035, "y": 306 }, { "x": 1036, "y": 306 }, { "x": 1037, "y": 306 }, { "x": 1040, "y": 306 }, { "x": 1043, "y": 306 }, { "x": 1046, "y": 306 }, { "x": 1049, "y": 306 }, { "x": 1051, "y": 305 }, { "x": 1054, "y": 304 }, { "x": 1056, "y": 303 }, { "x": 1057, "y": 301 }, { "x": 1059, "y": 300 }, { "x": 1061, "y": 298 }, { "x": 1062, "y": 296 }, { "x": 1064, "y": 294 }, { "x": 1064, "y": 293 }, { "x": 1065, "y": 292 }, { "x": 1066, "y": 290 }, { "x": 1067, "y": 288 }, { "x": 1068, "y": 287 }, { "x": 1068, "y": 286 }, { "x": 1068, "y": 285 }, { "x": 1068, "y": 284 }]];

	const testWall = new Wall('test wall');
	testWall.holds = holdData.map((p, i) => { const h = new Hold(`hold ${i}`); h.data = JSON.stringify(p); return h });
	const testProblem1 = new Problem('test problem 1');
	testProblem1.wall = testWall;
	testProblem1.holds = [testWall.holds[0], testWall.holds[2]];
	const testProblem2 = new Problem('test problem 2');
	testProblem2.wall = testWall;
	testProblem2.holds = [testWall.holds[1], testWall.holds[2]];
	testWall.problems = [testProblem1, testProblem2];

	// await connection.manager.save(testWall);
	// console.log(`New wall has id ${testWall.id}`);

	const app = express();
	app.use(cors());
	app.options('*', cors());

	app.use(express.static(path.join(__dirname, '../../client/build')));
	app.use(express.json());

	app.get('/api/walls', async (req, res) => {
		const walls = await connection.manager.find(Wall);

		res.setHeader('Content-Type', 'application/json');
		res.end(JSON.stringify(walls, null, 2));
	});

	app.post('/api/walls', async (req, res) => {

	});

	app.get('/api/wall/:id', async (req, res) => {
		const wall = await connection.manager.findOne(Wall, req.params.id, { relations: ['holds'] });

		res.setHeader('Content-Type', 'application/json');
		res.end(JSON.stringify(wall, null, 2));
	});

	app.get('/api/wall/:id/problems', async (req, res) => {
		const wall = await connection.manager.findOne(Wall, req.params.id, { relations: ['problems'] });

		res.setHeader('Content-Type', 'application/json');
		res.end(JSON.stringify(wall!.problems, null, 2));
	});

	app.post('/api/wall/:id/problems', async (req, res) => {

		const data: {
			problemName: string,
			difficulty: string,
			holdIds: number[],
		} = req.body;
		console.log(`req.body: ${JSON.stringify(data)}`);
		if (!data.problemName) {
			return res.status(400).end(`All problems must have a name`);
		}
		if (data.holdIds.length < 2) {
			return res.status(400).end(`All problems must have at least 2 holds`);
		}

		const wall = await connection.manager.findOne(Wall, req.params.id, { relations: ['holds'] });
		// TODO: Save the linked holds without first looking them up in db?
		const problem = new Problem(data.problemName);
		problem.difficulty = data.difficulty || undefined;
		problem.holds = wall!.holds!.filter(hold => data.holdIds.includes(hold.id!));
		problem.wall = wall;
		await connection.manager.save(problem);
		console.log(`New problem has id ${problem.id}`);

		res.setHeader('Content-Type', 'application/json');
		res.end(JSON.stringify(problem.id));
	});

	app.get('/api/wall/:wallId/problem/:problemId', async (req, res) => {
		const problem = await connection.manager
			.findOne(Problem, req.params.problemId, { relations: ['wall', 'holds'] });

		if (!problem || !problem.wall || problem.wall.id !== parseInt(req.params.wallId)) {
			return res.status(404).end('404 Not Found');
		}

		res.setHeader('Content-Type', 'application/json');
		res.end(JSON.stringify(problem, null, 2));
	});

	app.get('/api', (req, res) => res.status(404).end('404 Not Found'));
	app.get('/api/*', (req, res) => res.status(404).end('404 Not Found'));

	// Serve frontend
	app.get('*', (req, res) => {
		res.sendFile(path.resolve(__dirname, '../../client/build/index.html'));
	});

	app.listen(9000);

})();
